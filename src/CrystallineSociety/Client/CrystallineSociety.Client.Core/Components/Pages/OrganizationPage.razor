@page "/o/{OrganizationCode}/{NavTitle?}"
@inherits AppComponentBase


<nav class="navbar navbar-expand-lg bg-body-tertiary">
    <div class="container-fluid">
        <a class="navbar-brand" href="#">@OrganizationCode</a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                <li class="nav-item">
                    <a class="nav-link @(ActiveOrganizationNavLink == OrganizationNavLink.Home ? "active" : "")" @onclick="@(()=>HandleNavMenuClickAsync("Home"))">Home</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link @(ActiveOrganizationNavLink == OrganizationNavLink.Docs ? "active" : "")" @onclick="@(()=>HandleNavMenuClickAsync("Docs"))">Docs</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link @(ActiveOrganizationNavLink == OrganizationNavLink.Learners ? "active" : "")" @onclick="@(()=>HandleNavMenuClickAsync("Learners"))">Learners</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link @(ActiveOrganizationNavLink == OrganizationNavLink.Badges ? "active" : "")" @onclick="@(()=>HandleNavMenuClickAsync("Badges"))">Badges</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link @(ActiveOrganizationNavLink == OrganizationNavLink.Feed ? "active" : "")" @onclick="@(()=>HandleNavMenuClickAsync("Feed"))">Feed</a>
                </li>
            </ul>
        </div>
    </div>
</nav>

@if (Organization is not null)
{
    @switch (ActiveOrganizationNavLink)
    {
        case OrganizationNavLink.Home:
            <OrganizationHome></OrganizationHome>
            break;
        case OrganizationNavLink.Badges:
            <OrganizationBadges Organization=Organization Bundle="Bundle"></OrganizationBadges>
            break;
        case OrganizationNavLink.Docs:
            <OrganizationDocs Organization="Organization"></OrganizationDocs>
            break;
        case OrganizationNavLink.Learners:
            <OrganizationLearners></OrganizationLearners>
            break;
        case OrganizationNavLink.Feed:
            <OrganizationFeeds></OrganizationFeeds>
            break;
        default:
            break;
    }
}